     1                                  BOOT_LOAD equ 0x7c00 ; ブートプログラムのロード位置
     2                                  ORG BOOT_LOAD ; ロードアドレスをアセンブラに指示
     3                                  
     4                                  ;-------------
     5                                  ; マクロ
     6                                  ;-------------
     7                                  %include "../include/macro.s"
     8                              <1> %macro  cdecl 1-*.nolist
     9                              <1> 
    10                              <1>     %rep %0 - 1
    11                              <1>         push    %{-1:-1}
    12                              <1>         %rotate -1
    13                              <1>     %endrep
    14                              <1>     %rotate -1 ; 関数の位置を第一引数にする
    15                              <1>         call    %1 ; 関数を呼び出す
    16                              <1>     %if 1 < %0 ; 引数を持つ場合
    17                              <1>         add     sp, (__BITS__ >> 3) * (%0 - 1)  ; SPの位置を元に戻す。
    18                              <1>                                                 ; __BITS__はレジスタのbit幅を表す。
    19                              <1>                                                 ; これをシフト演算により8で割る。(16bitなら2, 32bitなら4)
    20                              <1>                                                 ; その数字に 引数の数をかけた分だけスタックポインタの位置を戻す。
    21                              <1>     %endif
    22                              <1> 
    23                              <1> %endmacro
     8                                  
     9                                  ;-------------
    10                                  ; エントリーポイント
    11                                  ;-------------
    12                                  entry:
    13 00000000 EB58                        jmp ipl ; IPLへジャンプ
    14                                  
    15                                      ; BPB(BIOS Parameter Block)
    16 00000002 90<rep 58h>                 times 90 - ($ - $$) db 0x90 ; NOPで90バイト分のBPB領域を埋める
    17                                      
    18                                  
    19                                  ipl: ; IPL(Initial Program Loader)
    20                                  
    21                                      ; セグメントレジスタを設定する
    22 0000005A FA                          cli ; 割り込みを禁止する
    23 0000005B B80000                      mov ax, 0x0000 ; AX=0x0000
    24 0000005E 8ED8                        mov ds, ax ; DS=0x0000
    25 00000060 8EC0                        mov es, ax ; ES=0x0000
    26 00000062 8ED0                        mov ss, ax ; ss=0x0000
    27 00000064 BC007C                      mov sp, BOOT_LOAD ; sp=0x7c00
    28                                  
    29 00000067 FB                          sti ; セグメントレジスタの初期化が終わったので、割り込みを許可する
    30                                  
    31 00000068 8816[8600]                  mov [BOOT.DRIVE], dl ; ブートドライブを保存
    32                                      
    33                                      ; 文字を表示
    34 0000006C 68[7700]E8160083C4-         cdecl   puts, .s0
    34 00000074 02                 
    35                                      
    36                                      ; 処理の終了
    37 00000075 EBFE                        jmp $ ; while(1); 無限ループ
    38                                  
    39                                  ;-------------
    40                                  ; データ
    41                                  ;-------------
    42                                  .s0 
    42          ******************       warning: label alone on a line without a colon might be in error [-w+label-orphan]
    43 00000077 48656C6C6F2C20576F-         db "Hello, World", 0x0A, 0x0D, 0 ; 0x0Aは改行文字、0x0Dはカーソルを一番左に移すための文字
    43 00000080 726C640A0D00       
    44                                  
    45                                  ALIGN 2, db 0
    46                                  BOOT: ; ブートドライブに関する情報
    47 00000086 0000                    .DRIVE: dw 0 ; ドライブ番号を保存する場所。(アセンブル段階では0を記入しておく)
    48                                  
    49                                  ;-------------
    50                                  ; モジュール
    51                                  ;-------------
    52                                  %include    "../modules/real/puts.s"
    53                              <1> puts:
    54                              <1>     ;-------------------
    55                              <1>     ; スタックフレームの構築
    56                              <1>     ;-------------------
    57                              <1>     ;   +4| 文字列へのアドレス
    58                              <1>     ;   +2| 戻るアドレス
    59                              <1>     ; BP+0| 元のBPの値   
    60 00000088 55                  <1>     push    bp
    61 00000089 89E5                <1>     mov     bp, sp
    62                              <1>     
    63                              <1>     ;-------------------
    64                              <1>     ; レジスタの保存
    65                              <1>     ;-------------------
    66 0000008B 50                  <1>     push    ax
    67 0000008C 53                  <1>     push    bx
    68 0000008D 56                  <1>     push    si
    69                              <1> 
    70                              <1>     ;-------------------
    71                              <1>     ; 引数の取得
    72                              <1>     ;-------------------
    73 0000008E 8B7604              <1>     mov     si, [bp + 4]
    74                              <1> 
    75                              <1>     ;-------------------
    76                              <1>     ; 処理の開始
    77                              <1>     ;-------------------
    78 00000091 B40E                <1>     mov     ah, 0x0E    ; テレタイプ式1文字出力
    79 00000093 BB0000              <1>     mov     bx, 0x0000  ; ページ番号と文字色を0に設定
    80 00000096 FC                  <1>     cld
    81                              <1> 
    82                              <1> .10L
    82          ******************  <1>  warning: label alone on a line without a colon might be in error [-w+label-orphan]
    83 00000097 AC                  <1>     lodsb               ; SIレジスタからAXレジスタに値をコピーし、SIレジスタを1バイト分インクリメント
    84 00000098 3C00                <1>     cmp     al, 0       ; 終端かどうか
    85 0000009A 7404                <1>     je      .10E        ; 終端ならば終了
    86                              <1>                         ; 終端でない場合
    87 0000009C CD10                <1>     int     0x10        ; Int10(0x0E, AL) // 文字列出力
    88 0000009E EBF7                <1>     jmp     .10L        ; もう一度繰り返す
    89                              <1> .10E
    89          ******************  <1>  warning: label alone on a line without a colon might be in error [-w+label-orphan]
    90                              <1>     ;-------------------
    91                              <1>     ; レジスタの復帰
    92                              <1>     ;-------------------
    93 000000A0 5E                  <1>     pop     si
    94 000000A1 5B                  <1>     pop     bx
    95 000000A2 58                  <1>     pop     ax
    96                              <1> 
    97                              <1>     ;-------------------
    98                              <1>     ; スタックフレームの破棄
    99                              <1>     ;-------------------
   100 000000A3 89EC                <1>     mov     sp, bp
   101 000000A5 5D                  <1>     pop     bp
   102                              <1>     
   103 000000A6 C3                  <1>     ret
    53                                  
    54                                  ; ブートフラグ
    55 000000A7 00<rep 157h>                times 510 - ($ - $$) db 0x00 ; 510バイト目まで0x00で埋める
    56 000001FE 55AA                        db 0x55, 0xAA ; ブートフラグ
    57                                  
    58                                  
